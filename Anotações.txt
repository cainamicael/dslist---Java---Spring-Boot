Criar projeto: https://start.spring.io/
Maven e java 17

Dependências: Spring Web, JPA (para mecher com banco de dados), h2 (banco de dados em memória), postgreSql (bd para implantar na nuvem)

Lib maven: Colar no pom.xml (dps, botão direito na pasta root, maven, update e marca o force update)

	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-resources-plugin</artifactId>
		<version>3.1.0</version> <!--$NO-MVN-MAN-VER$ -->
	</plugin>


Configurando o arquivo application.properties:

	spring.profiles.active=${APP_PROFILE:test}
	spring.jpa.open-in-view=false

	cors.origins=${CORS_ORIGINS:http://localhost:5173,http://localhost:3000}

Fazendo ORM:

Perfil de testes (Configurações do banco de dados de teste (H2)):

Criando o application-test.properties:

	# H2 Connection
	spring.datasource.url=jdbc:h2:mem:testdb
	spring.datasource.username=sa
	spring.datasource.password=

	# H2 Client
	spring.h2.console.enabled=true
	spring.h2.console.path=/h2-console

	# Show SQL
	spring.jpa.show-sql=true
	spring.jpa.properties.hibernate.format_sql=true

Criando classe Game (entidade) no pacote entities (src/main/java):

Notations usadas (para importar, damos ctrl + shift + o):

	@Entity
	@Table(name = 'tb_game')
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "game_year") //Para que no banco, o nome não fique year, pois dá conflito

Classe:

	package com.devsuperior.dslist.entities;

	import java.util.Objects;

	import jakarta.persistence.Column;
	import jakarta.persistence.Entity;
	import jakarta.persistence.GeneratedValue;
	import jakarta.persistence.GenerationType;
	import jakarta.persistence.Id;
	import jakarta.persistence.Table;

	@Entity
	@Table(name = "tb_game")
	public class Game {
		
		@Id
		@GeneratedValue(strategy = GenerationType.IDENTITY)
		private Long id;
		private String title;
		
		@Column(name = "game_year") //Para que no banco, o nome não fique year, pois dá conflito
		
		private Integer year;
		private String genre;
		private String plataform;
		private Double score;
		private String imgUrl;
		private String shortDestription;
		private String longDescription;
		
		public Game() {}

		public Game(Long id, String title, Integer year, String genre, String plataform, Double score, String imgUrl,
				String shortDestription, String longDescription) {
			this.id = id;
			this.title = title;
			this.year = year;
			this.genre = genre;
			this.plataform = plataform;
			this.score = score;
			this.imgUrl = imgUrl;
			this.shortDestription = shortDestription;
			this.longDescription = longDescription;
		}

		public Long getId() {
			return id;
		}

		public void setId(Long id) {
			this.id = id;
		}

		public String getTitle() {
			return title;
		}

		public void setTitle(String title) {
			this.title = title;
		}

		public Integer getYear() {
			return year;
		}

		public void setYear(Integer year) {
			this.year = year;
		}

		public String getGenre() {
			return genre;
		}

		public void setGenre(String genre) {
			this.genre = genre;
		}

		public String getPlataform() {
			return plataform;
		}

		public void setPlataform(String plataform) {
			this.plataform = plataform;
		}

		public Double getScore() {
			return score;
		}

		public void setScore(Double score) {
			this.score = score;
		}

		public String getImgUrl() {
			return imgUrl;
		}

		public void setImgUrl(String imgUrl) {
			this.imgUrl = imgUrl;
		}

		public String getShortDestription() {
			return shortDestription;
		}

		public void setShortDestription(String shortDestription) {
			this.shortDestription = shortDestription;
		}

		public String getLongDescription() {
			return longDescription;
		}

		public void setLongDescription(String longDescription) {
			this.longDescription = longDescription;
		}
		
		//Compara se os games são iguais ou não
		
		@Override
		public int hashCode() {
			return Objects.hash(id);
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			Game other = (Game) obj;
			return Objects.equals(id, other.id);
		}
		
	}

Acessando o banco h2: http://localhost:8080/h2-console

